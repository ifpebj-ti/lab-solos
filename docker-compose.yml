networks:
  private_network:
    driver: bridge
  public_network:
    driver: bridge

services:
  frontend:
    image: jrrs1/frontend-labon:latest
    container_name: frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - public_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__PostgresConnection=Host=db;Port=5432;Database=labsolos;Username=postgres;Password=postgres
    depends_on:
      db:
        condition: service_healthy
    networks:
      - private_network
      - public_network
  db:
    image: postgres:15
    container_name: database
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: labsolos
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - private_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d labsolos"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pg_data:
