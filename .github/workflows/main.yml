name: CI/CD Workflow

on:
  push:
    tags:
      - 'v*'
      - '[0-9]*'
    

jobs:
  frontend:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, 'frontend') || true
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run ESLint
        run: |
          cd frontend
          npm run lint

      - name: Extract version from tag
        id: extract_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t jrrs1/frontend-labon:${{ steps.extract_tag.outputs.TAG }} -f frontend/Dockerfile frontend
          docker tag jrrs1/frontend-labon:${{ steps.extract_tag.outputs.TAG }} jrrs1/frontend-labon:latest

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Scan Docker image (Docker Scout)
        run: |
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
          sh install-scout.sh
          docker scout quickview jrrs1/frontend-labon:${{ steps.extract_tag.outputs.TAG }}
          docker scout cves jrrs1/frontend-labon:${{ steps.extract_tag.outputs.TAG }}

      - name: Push Docker image
        run: |
          docker push jrrs1/frontend-labon:${{ steps.extract_tag.outputs.TAG }}
          docker push jrrs1/frontend-labon:latest

  backend:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, 'backend') || true
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: |
          cd backend/LabSolos-Server-DotNet8
          dotnet restore

      - name: Run tests
        run: |
          cd backend/LabSolos-Server-DotNet8
          dotnet test

      - name: Extract version from tag
        id: extract_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t jrrs1/backend-labon:${{ steps.extract_tag.outputs.TAG }} -f backend/Dockerfile backend
          docker tag jrrs1/backend-labon:${{ steps.extract_tag.outputs.TAG }} jrrs1/backend-labon:latest

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Scan Docker image (Docker Scout)
        run: |
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
          sh install-scout.sh
          docker scout quickview jrrs1/backend-labon:${{ steps.extract_tag.outputs.TAG }}
          docker scout cves jrrs1/backend-labon:${{ steps.extract_tag.outputs.TAG }}

      - name: Push Docker image
        run: |
          docker push jrrs1/backend-labon:${{ steps.extract_tag.outputs.TAG }}
          docker push jrrs1/backend-labon:latest
